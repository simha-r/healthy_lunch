= render 'company/current_orders/header',state: 'dispatched'

%table.table
  %thead
    %tr
      %th
        Order #
      %th
        User
      %th
        Delivery Time
      %th
        Dispatched At
      %th
        Delivery Executive
      %th
        Items
      %th
        State
      %th
        Actions
  %tbody
  - previous_order = nil
  - previous_color = nil
  - colors = ['#ddd','#CDBCBC']
  - @orders.each do |order|
    - if order.delivery_time == previous_order.try(:delivery_time)
      - color = previous_color || '#CDBCBC'
      -#Use same color as previous one
    - else
      -#TODO Use different color
      - color = previous_color ? (colors - [previous_color])[0] : '#ddd'
    - previous_order= order
    - previous_color = color
    %tr{:style => "background-color: #{color}"}
      %td
        = link_to order.id,[:company,order]
        - if order.address.has_location?
          %br
          = link_to 'See Location',[:map_view,:company,order],target: '_blank'
      %td{'width'=>'150px'}
        %p= "#{order.user.name}, #{order.user.profile.phone_number}"
        %i Address:
        %span= order.address.formatted
      %td
        = order.delivery_time_range
      %td
        = order.dispatched_at.strftime("%l:%M %p, %a ")
      %td{'width'=>'145px'}
        = "#{order.delivery_executive.name} , #{order.delivery_executive.phone_number}"
      %td
        -order.line_items.includes(:menu_product).includes(:product).each do |li|
          = "#{li.product.name}(#{li.product.category}) => #{li.quantity}"
          %br
      %td{class: "#{order.state}" }
        = order.state
      %td
        - if current_company_user.has_role? :admin
          - if !order.delivered?
            =link_to "Mark Delivered",deliver_company_order_path(order),method: :put

= render 'company/current_orders/new_order_handling'
